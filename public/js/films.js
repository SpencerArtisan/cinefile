// Generated by CoffeeScript 1.3.3
(function() {
  'use strict';

  angular.module("app").controller("FilmsController", [
    "$scope", "$routeParams", "$resource", "$location", function(scope, routeParams, resource, location) {
      console.log("route params are " + routeParams.id);
      scope.loadFilms = function() {
        var success;
        success = function(response) {
          return scope.films = response.films;
        };
        return scope.loadFilmsFromBackend(success);
      };
      scope.loadFilm = function() {
        var success;
        success = function(response) {
          return scope.film = response.films[parseInt(routeParams.id) - 1];
        };
        return scope.loadFilmsFromBackend(success);
      };
      scope.loadShowing = function() {
        var success;
        success = function(response) {
          scope.film = response.films[parseInt(routeParams.id) - 1];
          return scope.showing = scope.film.showings[parseInt(routeParams.showing_id)];
        };
        return scope.loadFilmsFromBackend(success);
      };
      scope.loadFilmsFromBackend = function(success) {
        var failure;
        failure = function(response) {
          return console.log("films failed with " + response.status);
        };
        return resource('/films', {}, {
          get: {
            method: 'GET',
            cache: true
          }
        }).get(success, failure);
      };
      scope.loadReview = function() {
        var failure, success;
        console.log("route params are " + routeParams.id);
        success = function(response) {
          var rottentomatoes;
          scope.film = response.films[parseInt(routeParams.id) - 1];
          console.log("film for review is " + scope.film);
          rottentomatoes = "<object data='" + scope.film.link + "' type='text/html' style='margin-top:-155px' width='100%' height='3000px'>";
          return $('#content').append(rottentomatoes);
        };
        failure = function(response) {
          return console.log("films failed with " + response.status);
        };
        return resource('/films', {}, {
          get: {
            method: 'GET',
            cache: true
          }
        }).get(success, failure);
      };
      scope.when_formatted = function(showing) {
        return moment(showing.day_on).format('ddd Do MMM');
      };
      scope.short_title = function(film) {
        return film.title.split("(")[0];
      };
      scope.showFilm = function(id) {
        return location.path("/films/" + id);
      };
      return scope.link = function(film) {
        return encodeURIComponent(film.link);
      };
    }
  ]);

}).call(this);
